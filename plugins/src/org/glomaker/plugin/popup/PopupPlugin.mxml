<?xml version="1.0" encoding="utf-8"?>

<!--
/////////////////////////////////////////////////////////////////////////
// Copyright (c) 2007-12 LTRI, London Metropolitan Uni. All rights reserved.
// An Open Source Release under the GPL v3 licence  (see http://www.gnu.org/licenses/).
// Authors: Tom Boyle, Nils Millahn, Musbah Sagar, Martin Agombar.
// See http://www.glomaker.org for full details
/////////////////////////////////////////////////////////////////////////
-->

<BaseComponent
	xmlns="org.glomaker.shared.component.*"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:editbutton="org.glomaker.shared.ui.editbutton.*"
	horizontalScrollPolicy="off"
	verticalScrollPolicy="off"
	>
	
	<mx:Script>
		<![CDATA[
			import org.glomaker.shared.properties.RichTextProperty;
			import org.glomaker.shared.properties.StringProperty;
			
			//--------------------------------------------------
			// Protected vars
			//--------------------------------------------------
			
			// component properties
			protected var buttonLabel:StringProperty = new StringProperty("label", "Label", "Button Label");
			protected var text:RichTextProperty = new RichTextProperty("text", "Text", "");
			
			//--------------------------------------------------
			// Overrides
			//--------------------------------------------------
			
			override protected function defineProperties():void
			{
				super.defineProperties();
				
				text.textArea = textArea;
				
				addSaveableProperty(buttonLabel);
				addSaveableProperty(text);
			}
			
			override protected function componentInitComplete():void
			{
				super.componentInitComplete();
				
				button.label = buttonLabel.propValue;
				textArea.htmlText = text.propValue;
			}
			
			override public function prepareValuesForSave():void
			{
				super.prepareValuesForSave();
				
				buttonLabel.propValue = button.label;
				text.propValue = textArea.htmlText; 
			}
			
			override public function setEditMode(value:Boolean):void
			{
				super.setEditMode(value);
				
				button.isEditable = value;
				
				textArea.editable = value;
				textArea.visible = value;
				textArea.setStyle("borderStyle", value ? "solid" : "none");
			}
			
			//--------------------------------------------------
			// Event handlers
			//--------------------------------------------------
			
			protected function button_clickHandler(event:MouseEvent):void
			{
				textArea.visible = true;
			}
		]]>
	</mx:Script>
	
	<mx:VBox width="100%" height="100%" horizontalAlign="center">
		<editbutton:EditableButton id="button" click="button_clickHandler(event)" />
		<mx:TextArea id="textArea" width="100%" height="100%" visible="false" editable="false" backgroundAlpha="0" borderStyle="none" />
	</mx:VBox>
	
</BaseComponent>